plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'etri'
version = '1.1.2'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://maven.aksw.org/repository/internal/"
		allowInsecureProtocol = true
	}
}
dependencies {
	implementation project(":utils")
	implementation project(":mdt-client")

	// Guava (from the project :utils)
	implementation "com.google.guava:guava:${guava_version}"
	
	// Checker framework
	implementation("org.checkerframework:checker:${checker_version}")
	
	// AAS model
	implementation "org.eclipse.digitaltwin.aas4j:aas4j-dataformat-json:${aas4j_version}"
	implementation "org.eclipse.digitaltwin.aas4j:aas4j-dataformat-aasx:${aas4j_version}"
	
	implementation 'org.apache.poi:poi-ooxml:5.2.2'
		
	// HTTP Client
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: "${okhttp_version}"
	
    // SpringBoot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdoc_version}"
	implementation "com.vladmihalcea:hibernate-types-60:${hibernate_types_60_version}"
	
	// MQTT
	implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${paho_version}"
	
	// Docker Java Binding
	implementation "org.mandas:docker-client:${docker_client_version}"
	implementation "org.glassfish.jersey.core:jersey-client:${jersey_version}"
	implementation ( "org.glassfish.jersey.connectors:jersey-apache-connector:${jersey_version}" ) {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${jersey_version}"
	implementation "org.glassfish.jersey.inject:jersey-hk2:${jersey_version}"
	
	// Kubernetes client
	implementation "io.fabric8:kubernetes-client:${fabric8_version}"
}

bootJar {
	archiveClassifier = 'all'
	mainClass = 'mdt.MDTInstanceApplication'
}